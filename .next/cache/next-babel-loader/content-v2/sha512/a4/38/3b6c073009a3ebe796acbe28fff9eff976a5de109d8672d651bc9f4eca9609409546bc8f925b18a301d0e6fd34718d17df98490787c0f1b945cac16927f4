{"ast":null,"code":"import { Server } from 'socket.io';\nimport { db } from '../../utils/firebase';\nimport { collection } from '../../utils/variables';\n\nconst ioHandler = (req, res) => {\n  if (!res.socket.server.io) {\n    console.log('*First use, starting socket.io');\n    const io = new Server(res.socket.server);\n    io.on('connection', socket => {\n      socket.on('message', data => {\n        const {\n          id,\n          time\n        } = data;\n\n        async function update() {\n          await db.doc(`${collection}/${id}`).update({\n            time: time\n          });\n        }\n\n        update();\n      });\n      socket.on('disconnect', () => console.log('desconectado'));\n    });\n    res.socket.server.io = io;\n  } else {\n    console.log('socket.io already running');\n  }\n\n  res.end();\n};\n\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\nexport default ioHandler;","map":{"version":3,"sources":["C:/proyectos/next/seani/pages/api/socket.js"],"names":["Server","db","collection","ioHandler","req","res","socket","server","io","console","log","on","data","id","time","update","doc","end","config","api","bodyParser"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,SAAQC,EAAR,QAAiB,sBAAjB;AACA,SAAQC,UAAR,QAAyB,uBAAzB;;AAEA,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC9B,MAAI,CAACA,GAAG,CAACC,MAAJ,CAAWC,MAAX,CAAkBC,EAAvB,EAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AAEA,UAAMF,EAAE,GAAG,IAAIR,MAAJ,CAAWK,GAAG,CAACC,MAAJ,CAAWC,MAAtB,CAAX;AAEAC,IAAAA,EAAE,CAACG,EAAH,CAAM,YAAN,EAAoBL,MAAM,IAAI;AAE5BA,MAAAA,MAAM,CAACK,EAAP,CAAU,SAAV,EAAsBC,IAAD,IAAU;AAC7B,cAAM;AAACC,UAAAA,EAAD;AAAIC,UAAAA;AAAJ,YAAYF,IAAlB;;AACA,uBAAeG,MAAf,GAAwB;AACtB,gBAAMd,EAAE,CAACe,GAAH,CAAQ,GAAEd,UAAW,IAAGW,EAAG,EAA3B,EAA8BE,MAA9B,CAAqC;AACzCD,YAAAA,IAAI,EAACA;AADoC,WAArC,CAAN;AAGD;;AACDC,QAAAA,MAAM;AACP,OARD;AASAT,MAAAA,MAAM,CAACK,EAAP,CAAU,YAAV,EAAuB,MAAIF,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA3B;AACD,KAZD;AAcAL,IAAAA,GAAG,CAACC,MAAJ,CAAWC,MAAX,CAAkBC,EAAlB,GAAuBA,EAAvB;AACD,GApBD,MAoBO;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;;AACDL,EAAAA,GAAG,CAACY,GAAJ;AACD,CAzBD;;AA2BA,OAAO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE;AADT;AADe,CAAf;AAMP,eAAejB,SAAf","sourcesContent":["import { Server } from 'socket.io'\r\nimport {db} from '../../utils/firebase'\r\nimport {collection} from '../../utils/variables'\r\n\r\nconst ioHandler = (req, res) => {\r\n  if (!res.socket.server.io) {\r\n    console.log('*First use, starting socket.io')\r\n\r\n    const io = new Server(res.socket.server)\r\n\r\n    io.on('connection', socket => {\r\n\r\n      socket.on('message', (data) => {\r\n        const {id,time} = data\r\n        async function update (){\r\n          await db.doc(`${collection}/${id}`).update({\r\n            time:time\r\n          });\r\n        }\r\n        update();\r\n      })\r\n      socket.on('disconnect',()=>console.log('desconectado'))\r\n    })\r\n\r\n    res.socket.server.io = io\r\n  } else {\r\n    console.log('socket.io already running')\r\n  }\r\n  res.end()\r\n}\r\n\r\nexport const config = {\r\n  api: {\r\n    bodyParser: false\r\n  }\r\n}\r\n\r\nexport default ioHandler"]},"metadata":{},"sourceType":"module"}