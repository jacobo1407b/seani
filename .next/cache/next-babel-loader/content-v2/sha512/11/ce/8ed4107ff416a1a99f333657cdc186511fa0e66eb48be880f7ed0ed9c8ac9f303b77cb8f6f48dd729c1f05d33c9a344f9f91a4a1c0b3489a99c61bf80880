{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStore } from \"redux\";\nconst initialState = {\n  user: {},\n  rejoj: {},\n  activeTest: false,\n  time: 0,\n  typeTest: \"\",\n  alumno: {}\n};\n\nfunction updateState(state = initialState, action) {\n  switch (action.type) {\n    case \"USER\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload\n      });\n\n    case \"ALUMNO\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        alumno: action.payload\n      });\n\n    case \"TIPE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        typeTest: action.payload\n      });\n\n    case \"TIME\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        time: action.payload\n      });\n\n    case \"TEST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        activeTest: action.payload\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n  /**\r\n   * return state;\r\n   */\n\n}\n\nconst store = createStore(updateState //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nexport default store;","map":null,"metadata":{},"sourceType":"module"}