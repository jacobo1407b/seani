{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { useSnackbar } from \"notistack\";\nimport { useDispatch } from 'react-redux';\nimport { accionTime } from '../../redux/accion';\nimport AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\nimport { allCancel } from '../../utils/api';\n\nfunction RelojLimit(_ref) {\n  var user = _ref.user,\n      alumno = _ref.alumno;\n\n  var _useState = useState(null),\n      sock = _useState[0],\n      setSock = _useState[1];\n\n  useEffect(function () {\n    fetch(\"/api/socket\");\n    var socket = io();\n    socket.on(\"connect\", function () {\n      console.log(\"user \".concat(user.uid, \" connect\"));\n    });\n    setSock(socket);\n    return function () {\n      return socket.on(\"disconnect\", function () {\n        console.log(\"user \".concat(user.uid, \" disconnect\"));\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsx(TimerInternal, {\n    socket: sock,\n    user: user,\n    alumno: alumno\n  });\n}\n\nfunction TimerInternal(_ref2) {\n  var _alumno$data;\n\n  var socket = _ref2.socket,\n      user = _ref2.user,\n      alumno = _ref2.alumno;\n  var dispatch = useDispatch();\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _useState2 = useState(alumno === null || alumno === void 0 ? void 0 : (_alumno$data = alumno.data) === null || _alumno$data === void 0 ? void 0 : _alumno$data.time),\n      seconds = _useState2[0],\n      setSeconds = _useState2[1];\n\n  var _useState3 = useState({\n    h: null,\n    m: null,\n    s: null\n  }),\n      timer = _useState3[0],\n      setTimer = _useState3[1];\n\n  useEffect(function () {\n    var interval = null;\n\n    if (seconds === 900) {\n      enqueueSnackbar(\"Quedan 15 minutos para finalizar\", {\n        variant: \"warning\"\n      });\n    }\n\n    if (seconds === 0) {\n      enqueueSnackbar(\"El tiempo para realizar tu examen finalizo\", {\n        variant: \"info\"\n      });\n      setSeconds(0);\n      dispatch(accionTime(0));\n      setTimer({\n        s: 0,\n        h: 0,\n        m: 0\n      });\n      socket === null || socket === void 0 ? void 0 : socket.emit(\"message\", {\n        id: user.uid,\n        time: seconds\n      });\n      allCancel({\n        id: user === null || user === void 0 ? void 0 : user.uid\n      }).then(function () {\n        window.location.replace('/home');\n      });\n    } else {\n      interval = setInterval(function () {\n        setSeconds(function (seconds) {\n          return seconds - 1;\n        });\n      }, 1000);\n      dispatch(accionTime(seconds));\n      setTimer({\n        s: Math.round(seconds % 0x3c),\n        h: Math.floor(seconds / 0xe10),\n        m: Math.floor(seconds / 0x3c) % 0x3c\n      });\n      socket === null || socket === void 0 ? void 0 : socket.emit(\"message\", {\n        id: user.uid,\n        time: seconds\n      });\n    }\n\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [seconds]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(AccessAlarmIcon, {}), \"\".concat(timer.h, \"H \").concat(timer.m, \" M \").concat(timer.s, \"S\")]\n  });\n}\n\nexport default RelojLimit;","map":null,"metadata":{},"sourceType":"module"}